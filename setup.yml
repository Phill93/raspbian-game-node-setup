---
  - hosts: localhost
    tasks:
      - name: Detect if border node
        add_host:
          name: "{{ inventory_hostname }}"
          groups:
            - border
        when: "'eth0' in ansible_interfaces"
        changed_when: False

  - hosts: localhost
    become: true
    tags:
      - hostname
    tasks:
      - name: Get current hostname
        set_fact:
          old_hostname: "{{ ansible_hostname }}"

      - name: Generate new hostname (inner-node)
        set_fact:
          new_hostname: "node-i-{{ ansible_wlan0.macaddress[-8:] | replace(':', '') }}"
        when: "'border' not in group_names"

      - name: Generate new hostname (border-node)
        set_fact:
          new_hostname: "node-b-{{ ansible_wlan0.macaddress[-8:] | replace(':', '') }}"
        when: "'border' in group_names"
        
      - name: Set hostname (hostname)
        hostname:
          name: "{{ new_hostname }}"
      - name: Set hostname (hosts)
        lineinfile:
          dest: /etc/hosts
          regexp: "^(.*){{ old_hostname }}"
          line: '\1{{ new_hostname }}'
          backrefs: yes

  - hosts: localhost
    become: true
    tags:
      - network
    vars:
      node_address_1: "{{ ansible_wlan0.macaddress[-8:-6] }}"
      node_address_2: "{{ ansible_wlan0.macaddress[-5:-3] }}"
      node_address_3: "{{ ansible_wlan0.macaddress[-2:] }}"
      node_address: "10.{{ node_address_1_conv.stdout }}.{{ node_address_2_conv.stdout }}.{{ node_address_3_conv.stdout }}"
      subnet: "8"
    tasks:
      - name: Convert Mac to IP (1)
        shell: 
          cmd: "echo $((16#{{ node_address_1 }}))"
          executable: /bin/bash
        register: node_address_1_conv
        changed_when: False
      
      - name: Convert Mac to IP (2)
        shell: 
          cmd: "echo $((16#{{ node_address_2 }}))"
          executable: /bin/bash
        register: node_address_2_conv
        changed_when: False

      - name: Convert Mac to IP (3)
        shell: 
          cmd: "echo $((16#{{ node_address_3 }}))"
          executable: /bin/bash
        register: node_address_3_conv
        changed_when: False

      - name: Set IPv4 address for bat0
        lineinfile:
          dest: /etc/network/interfaces.d/bat0
          regexp: "^  # IPv4 Placeholder"
          line: "  up ip address add {{ node_address }}/{{ subnet }} dev $IFACE"
        register: setip

      - name: Restart network
        service:
          name: networking
          state: restarted
        when: setip.changed

      - name: Enable (and start) A.L.F.R.E.D. services
        service:
          name: "{{ item }}"
          state: started
          enabled: yes
        with_items:
          - alfred
          - batadv-vis
      
      - name: Install metadata services
        copy:
          src: "files/{{ item }}"
          dest: "/etc/systemd/system/{{ item }}"
          owner: root
          group: root
          mode: 0644
        with_items:
          - update-alfred.service
          - update-alfred.timer
      
      - name: Reread systemd files
        systemd:
          daemon_reload: yes

      - name: Enable metadata timer
        systemd:
          name: update-alfred.timer
          state: started
          enabled: yes

  - hosts: localhost
    become: true
    tags:
      - vernemq
    tasks:
      - name: Configure vernemq
        template:
          src: files/vernemq.conf.j2
          dest: /etc/vernemq/vernemq.conf
          owner: root
          group: vernemq
          mode: 0640
        vars:
          node_name: "vernemq@{{ ansible_bat0.ipv4.address }}"
          cookie: "Kekse"

  - hosts: border
    become: true
    tags:
      - dhcpd
    tasks:
      - name: Configure dhcpd
        template:
          src: files/dhcpd.conf.j2
          dest: /etc/dhcp/dhcpd.conf
          owner: root
          group: root
          mode: 0644
        vars:
          blubb: []